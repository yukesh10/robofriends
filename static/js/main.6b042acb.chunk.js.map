{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","robot","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","searchField","useSelector","searchRobots","requestRobots","isPending","dispatch","useDispatch","useEffect","fetch","then","response","json","data","payload","catch","filteredRobots","filter","toLowerCase","includes","components_SearchBox","e","target","value","components_Scroll","components_ErrorBoundry","components_CardList","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_containers_App"],"mappings":"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","file":"static/js/main.6b042acb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((robot, i) => {\r\n                    return <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input type=\"search\" placeholder=\"search robots\" \r\n            className='pa3 ba b--green bg-lightest-blue' onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oops. This is not good.</h1>\r\n        } \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nimport { requestRobots, setSearchField } from '../actions';\r\n\r\nconst App = () => {\r\n\r\n    let searchField = useSelector(state => state.searchRobots.searchField);\r\n    let robots = useSelector(state => state.requestRobots.robots);\r\n    let isPending = useSelector(state => state.requestRobots.isPending);\r\n    const error = useSelector(state => state.requestRobots.error);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(requestRobots());\r\n    }, [dispatch]);\r\n\r\n    const onSearchChange = (e) => {\r\n        dispatch(setSearchField(e.target.value));\r\n    }\r\n\r\n    const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n\r\n    return isPending ?\r\n        <h1>Loading</h1>\r\n        :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default App;","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants';\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch( { type: REQUEST_ROBOTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then( data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n            .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_SEARCH_FIELD:\r\n            return { ...state, searchField: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n    switch(action.type){\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return {...state, isPending: true};\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return {...state, robots: action.payload, isPending: false};\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return {...state, error: action.payload, isPending: false };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({\n  searchRobots, \n  requestRobots\n})\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);"],"sourceRoot":""}